{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DriversService {\n  constructor(http) {\n    this.http = http;\n    this.baseApiUrl = environment._baseApiUrl;\n  }\n  GetAllDrivers() {\n    return this.http.get(this.baseApiUrl + '/api/Drivers');\n  }\n  AddNewDriver(addDriverReq) {\n    addDriverReq.id = 0;\n    addDriverReq.driverId = '00000000-0000-0000-0000-000000000000';\n    return this.http.post(this.baseApiUrl + '/api/Drivers', addDriverReq);\n  }\n  GetDriverById(id) {\n    return this.http.get(this.baseApiUrl + '/api/Drivers/' + id);\n  }\n  UpdateDriverData(UpdateDriverReq) {\n    return this.http.put(this.baseApiUrl + '/api/Drivers/' + UpdateDriverReq.driverId, UpdateDriverReq);\n  }\n  DeleteDriver(id) {\n    return this.http.delete(this.baseApiUrl + '/api/Drivers/' + id);\n  }\n  static {\n    this.ɵfac = function DriversService_Factory(t) {\n      return new (t || DriversService)(i0.ɵɵinject(i1.HttpClient));\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: DriversService,\n      factory: DriversService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["environment","DriversService","constructor","http","baseApiUrl","_baseApiUrl","GetAllDrivers","get","AddNewDriver","addDriverReq","id","driverId","post","GetDriverById","UpdateDriverData","UpdateDriverReq","put","DeleteDriver","delete","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["W:\\Repos\\DriverAssesmentProject.UI\\src\\app\\Services\\drivers.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { environment } from 'src/environments/environment';\r\nimport { Driver } from 'src/app/Models/Driver.model';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DriversService {\r\nbaseApiUrl : string = environment._baseApiUrl;\r\n\r\n  constructor(private http:HttpClient) { }\r\n\r\n  GetAllDrivers():Observable<Driver[]>{\r\n    return this.http.get<Driver[]>(this.baseApiUrl+'/api/Drivers');\r\n  }\r\n\r\n  AddNewDriver(addDriverReq:Driver):Observable<Driver>{\r\n    addDriverReq.id=0;\r\n    addDriverReq.driverId='00000000-0000-0000-0000-000000000000';\r\n    return this.http.post<Driver>(this.baseApiUrl + '/api/Drivers', addDriverReq);\r\n  }\r\n\r\n  GetDriverById(id:string):Observable<Driver>{\r\n    return this.http.get<Driver>(this.baseApiUrl+'/api/Drivers/'+id);\r\n  }\r\n\r\n  UpdateDriverData(UpdateDriverReq:Driver):Observable<Driver>{\r\n    return this.http.put<Driver>(this.baseApiUrl + '/api/Drivers/'+ UpdateDriverReq.driverId,UpdateDriverReq);\r\n  }\r\n\r\n  DeleteDriver(id:string):Observable<Driver>{\r\n    return this.http.delete<Driver>(this.baseApiUrl+'/api/Drivers/'+id);\r\n  }\r\n}\r\n"],"mappings":"AAEA,SAASA,WAAW,QAAQ,8BAA8B;;;AAO1D,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAe;IAAf,KAAAA,IAAI,GAAJA,IAAI;IAF1B,KAAAC,UAAU,GAAYJ,WAAW,CAACK,WAAW;EAEJ;EAEvCC,aAAaA,CAAA;IACX,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAAW,IAAI,CAACH,UAAU,GAAC,cAAc,CAAC;EAChE;EAEAI,YAAYA,CAACC,YAAmB;IAC9BA,YAAY,CAACC,EAAE,GAAC,CAAC;IACjBD,YAAY,CAACE,QAAQ,GAAC,sCAAsC;IAC5D,OAAO,IAAI,CAACR,IAAI,CAACS,IAAI,CAAS,IAAI,CAACR,UAAU,GAAG,cAAc,EAAEK,YAAY,CAAC;EAC/E;EAEAI,aAAaA,CAACH,EAAS;IACrB,OAAO,IAAI,CAACP,IAAI,CAACI,GAAG,CAAS,IAAI,CAACH,UAAU,GAAC,eAAe,GAACM,EAAE,CAAC;EAClE;EAEAI,gBAAgBA,CAACC,eAAsB;IACrC,OAAO,IAAI,CAACZ,IAAI,CAACa,GAAG,CAAS,IAAI,CAACZ,UAAU,GAAG,eAAe,GAAEW,eAAe,CAACJ,QAAQ,EAACI,eAAe,CAAC;EAC3G;EAEAE,YAAYA,CAACP,EAAS;IACpB,OAAO,IAAI,CAACP,IAAI,CAACe,MAAM,CAAS,IAAI,CAACd,UAAU,GAAC,eAAe,GAACM,EAAE,CAAC;EACrE;;;uBAzBWT,cAAc,EAAAkB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;IAAA;EAAA;;;aAAdrB,cAAc;MAAAsB,OAAA,EAAdtB,cAAc,CAAAuB,IAAA;MAAAC,UAAA,EAFb;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}